//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClinicBookingApplication.ClinicBookingService {
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentDataContract", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.DomainDataContracts")]
    [System.SerializableAttribute()]
    public partial class AppointmentDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppointmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClinicBookingApplication.ClinicBookingService.AppointmentType AppointmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClinicBookingApplication.ClinicBookingService.Clinic ClinicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClinicBookingApplication.ClinicBookingService.AppointmentDuration DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClinicBookingApplication.ClinicBookingService.Patient PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClinicBookingApplication.ClinicBookingService.Specialty SpecialtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClinicBookingApplication.ClinicBookingService.AppointmentUrgency UrgencyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppointmentId {
            get {
                return this.AppointmentIdField;
            }
            set {
                if ((this.AppointmentIdField.Equals(value) != true)) {
                    this.AppointmentIdField = value;
                    this.RaisePropertyChanged("AppointmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClinicBookingApplication.ClinicBookingService.AppointmentType AppointmentType {
            get {
                return this.AppointmentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentTypeField, value) != true)) {
                    this.AppointmentTypeField = value;
                    this.RaisePropertyChanged("AppointmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClinicBookingApplication.ClinicBookingService.Clinic Clinic {
            get {
                return this.ClinicField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicField, value) != true)) {
                    this.ClinicField = value;
                    this.RaisePropertyChanged("Clinic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClinicBookingApplication.ClinicBookingService.AppointmentDuration Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClinicBookingApplication.ClinicBookingService.Patient Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClinicBookingApplication.ClinicBookingService.Specialty Specialty {
            get {
                return this.SpecialtyField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyField, value) != true)) {
                    this.SpecialtyField = value;
                    this.RaisePropertyChanged("Specialty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClinicBookingApplication.ClinicBookingService.AppointmentUrgency Urgency {
            get {
                return this.UrgencyField;
            }
            set {
                if ((object.ReferenceEquals(this.UrgencyField, value) != true)) {
                    this.UrgencyField = value;
                    this.RaisePropertyChanged("Urgency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentType", Namespace="http://schemas.datacontract.org/2004/07/SampleDomain")]
    [System.SerializableAttribute()]
    public partial class AppointmentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppointmentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppointmentTypeId {
            get {
                return this.AppointmentTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentTypeIdField, value) != true)) {
                    this.AppointmentTypeIdField = value;
                    this.RaisePropertyChanged("AppointmentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescriptor {
            get {
                return this.TypeDescriptorField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptorField, value) != true)) {
                    this.TypeDescriptorField = value;
                    this.RaisePropertyChanged("TypeDescriptor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clinic", Namespace="http://schemas.datacontract.org/2004/07/SampleDomain")]
    [System.SerializableAttribute()]
    public partial class Clinic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClinicIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClinicId {
            get {
                return this.ClinicIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicIdField, value) != true)) {
                    this.ClinicIdField = value;
                    this.RaisePropertyChanged("ClinicId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentDuration", Namespace="http://schemas.datacontract.org/2004/07/SampleDomain")]
    [System.SerializableAttribute()]
    public partial class AppointmentDuration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan AppointmentLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan AppointmentLength {
            get {
                return this.AppointmentLengthField;
            }
            set {
                if ((this.AppointmentLengthField.Equals(value) != true)) {
                    this.AppointmentLengthField = value;
                    this.RaisePropertyChanged("AppointmentLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationId {
            get {
                return this.DurationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationIdField, value) != true)) {
                    this.DurationIdField = value;
                    this.RaisePropertyChanged("DurationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/SampleDomain")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdField, value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Specialty", Namespace="http://schemas.datacontract.org/2004/07/SampleDomain")]
    [System.SerializableAttribute()]
    public partial class Specialty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialtyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialtyId {
            get {
                return this.SpecialtyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyIdField, value) != true)) {
                    this.SpecialtyIdField = value;
                    this.RaisePropertyChanged("SpecialtyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentUrgency", Namespace="http://schemas.datacontract.org/2004/07/SampleDomain")]
    [System.SerializableAttribute()]
    public partial class AppointmentUrgency : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrgencyDescriptorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrgencyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrgencyDescriptor {
            get {
                return this.UrgencyDescriptorField;
            }
            set {
                if ((object.ReferenceEquals(this.UrgencyDescriptorField, value) != true)) {
                    this.UrgencyDescriptorField = value;
                    this.RaisePropertyChanged("UrgencyDescriptor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrgencyId {
            get {
                return this.UrgencyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UrgencyIdField, value) != true)) {
                    this.UrgencyIdField = value;
                    this.RaisePropertyChanged("UrgencyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidAppointmentIdFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
    [System.SerializableAttribute()]
    public partial class InvalidAppointmentIdFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentDurationDataContract", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.DomainDataContracts")]
    [System.SerializableAttribute()]
    public partial class AppointmentDurationDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppointmentLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppointmentLength {
            get {
                return this.AppointmentLengthField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentLengthField, value) != true)) {
                    this.AppointmentLengthField = value;
                    this.RaisePropertyChanged("AppointmentLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationId {
            get {
                return this.DurationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationIdField, value) != true)) {
                    this.DurationIdField = value;
                    this.RaisePropertyChanged("DurationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidDurationFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
    [System.SerializableAttribute()]
    public partial class InvalidDurationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentTypeDataContract", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.DomainDataContracts")]
    [System.SerializableAttribute()]
    public partial class AppointmentTypeDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppointmentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppointmentTypeId {
            get {
                return this.AppointmentTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentTypeIdField, value) != true)) {
                    this.AppointmentTypeIdField = value;
                    this.RaisePropertyChanged("AppointmentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescriptor {
            get {
                return this.TypeDescriptorField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptorField, value) != true)) {
                    this.TypeDescriptorField = value;
                    this.RaisePropertyChanged("TypeDescriptor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidAppointmentTypeFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
    [System.SerializableAttribute()]
    public partial class InvalidAppointmentTypeFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentUrgencyDataContract", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.DomainDataContracts")]
    [System.SerializableAttribute()]
    public partial class AppointmentUrgencyDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrgencyDescriptorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrgencyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrgencyDescriptor {
            get {
                return this.UrgencyDescriptorField;
            }
            set {
                if ((object.ReferenceEquals(this.UrgencyDescriptorField, value) != true)) {
                    this.UrgencyDescriptorField = value;
                    this.RaisePropertyChanged("UrgencyDescriptor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrgencyId {
            get {
                return this.UrgencyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UrgencyIdField, value) != true)) {
                    this.UrgencyIdField = value;
                    this.RaisePropertyChanged("UrgencyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClinicDataContract", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.DomainDataContracts")]
    [System.SerializableAttribute()]
    public partial class ClinicDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClinicIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClinicId {
            get {
                return this.ClinicIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicIdField, value) != true)) {
                    this.ClinicIdField = value;
                    this.RaisePropertyChanged("ClinicId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidClinicFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
    [System.SerializableAttribute()]
    public partial class InvalidClinicFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientDataContract", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.DomainDataContracts")]
    [System.SerializableAttribute()]
    public partial class PatientDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdField, value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidPatientFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
    [System.SerializableAttribute()]
    public partial class InvalidPatientFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpecialtyDataContract", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.DomainDataContracts")]
    [System.SerializableAttribute()]
    public partial class SpecialtyDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialtyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialtyId {
            get {
                return this.SpecialtyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyIdField, value) != true)) {
                    this.SpecialtyIdField = value;
                    this.RaisePropertyChanged("SpecialtyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidSpecialtyFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
    [System.SerializableAttribute()]
    public partial class InvalidSpecialtyFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClinicSpecialtyDataContract", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.DomainDataContracts")]
    [System.SerializableAttribute()]
    public partial class ClinicSpecialtyDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClinicBookingApplication.ClinicBookingService.Clinic ClinicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClinicSpecialtyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClinicBookingApplication.ClinicBookingService.Specialty SpecialtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClinicBookingApplication.ClinicBookingService.Clinic Clinic {
            get {
                return this.ClinicField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicField, value) != true)) {
                    this.ClinicField = value;
                    this.RaisePropertyChanged("Clinic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClinicSpecialtyId {
            get {
                return this.ClinicSpecialtyIdField;
            }
            set {
                if ((this.ClinicSpecialtyIdField.Equals(value) != true)) {
                    this.ClinicSpecialtyIdField = value;
                    this.RaisePropertyChanged("ClinicSpecialtyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClinicBookingApplication.ClinicBookingService.Specialty Specialty {
            get {
                return this.SpecialtyField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyField, value) != true)) {
                    this.SpecialtyField = value;
                    this.RaisePropertyChanged("Specialty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidClinicSpecialtyFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
    [System.SerializableAttribute()]
    public partial class InvalidClinicSpecialtyFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClinicBookingService.ISampleService")]
    public interface ISampleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/SetAppointment", ReplyAction="http://tempuri.org/ISampleService/SetAppointmentResponse")]
        ClinicBookingApplication.ClinicBookingService.AppointmentDataContract SetAppointment(bool isActive, string patientId, System.DateTime startDateTime, string durationId, string clinicId, string urgencyId, string appointmentTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/SetAppointment", ReplyAction="http://tempuri.org/ISampleService/SetAppointmentResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDataContract> SetAppointmentAsync(bool isActive, string patientId, System.DateTime startDateTime, string durationId, string clinicId, string urgencyId, string appointmentTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointment", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicBookingApplication.ClinicBookingService.InvalidAppointmentIdFault), Action="http://tempuri.org/ISampleService/GetAppointmentInvalidAppointmentIdFaultFault", Name="InvalidAppointmentIdFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
        ClinicBookingApplication.ClinicBookingService.AppointmentDataContract GetAppointment(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointment", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDataContract> GetAppointmentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/AlterAppointment", ReplyAction="http://tempuri.org/ISampleService/AlterAppointmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicBookingApplication.ClinicBookingService.InvalidAppointmentIdFault), Action="http://tempuri.org/ISampleService/AlterAppointmentInvalidAppointmentIdFaultFault", Name="InvalidAppointmentIdFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
        ClinicBookingApplication.ClinicBookingService.AppointmentDataContract AlterAppointment(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/AlterAppointment", ReplyAction="http://tempuri.org/ISampleService/AlterAppointmentResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDataContract> AlterAppointmentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointments", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentsResponse")]
        ClinicBookingApplication.ClinicBookingService.AppointmentDataContract[] GetAppointments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointments", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentsResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDataContract[]> GetAppointmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointmentDurationData", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentDurationDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicBookingApplication.ClinicBookingService.InvalidDurationFault), Action="http://tempuri.org/ISampleService/GetAppointmentDurationDataInvalidDurationFaultF" +
            "ault", Name="InvalidDurationFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
        ClinicBookingApplication.ClinicBookingService.AppointmentDurationDataContract GetAppointmentDurationData(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointmentDurationData", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentDurationDataResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDurationDataContract> GetAppointmentDurationDataAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAllAppointmentDurationData", ReplyAction="http://tempuri.org/ISampleService/GetAllAppointmentDurationDataResponse")]
        ClinicBookingApplication.ClinicBookingService.AppointmentDurationDataContract[] GetAllAppointmentDurationData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAllAppointmentDurationData", ReplyAction="http://tempuri.org/ISampleService/GetAllAppointmentDurationDataResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDurationDataContract[]> GetAllAppointmentDurationDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointmentTypeId", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentTypeIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicBookingApplication.ClinicBookingService.InvalidAppointmentTypeFault), Action="http://tempuri.org/ISampleService/GetAppointmentTypeIdInvalidAppointmentTypeFault" +
            "Fault", Name="InvalidAppointmentTypeFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
        ClinicBookingApplication.ClinicBookingService.AppointmentTypeDataContract GetAppointmentTypeId(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointmentTypeId", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentTypeIdResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentTypeDataContract> GetAppointmentTypeIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointmentTypes", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentTypesResponse")]
        ClinicBookingApplication.ClinicBookingService.AppointmentTypeDataContract[] GetAppointmentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointmentTypes", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentTypesResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentTypeDataContract[]> GetAppointmentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetUrgency", ReplyAction="http://tempuri.org/ISampleService/GetUrgencyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicBookingApplication.ClinicBookingService.InvalidDurationFault), Action="http://tempuri.org/ISampleService/GetUrgencyInvalidDurationFaultFault", Name="InvalidDurationFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
        ClinicBookingApplication.ClinicBookingService.AppointmentUrgencyDataContract GetUrgency(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetUrgency", ReplyAction="http://tempuri.org/ISampleService/GetUrgencyResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentUrgencyDataContract> GetUrgencyAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetUrgencies", ReplyAction="http://tempuri.org/ISampleService/GetUrgenciesResponse")]
        ClinicBookingApplication.ClinicBookingService.AppointmentUrgencyDataContract[] GetUrgencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetUrgencies", ReplyAction="http://tempuri.org/ISampleService/GetUrgenciesResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentUrgencyDataContract[]> GetUrgenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetClinicId", ReplyAction="http://tempuri.org/ISampleService/GetClinicIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicBookingApplication.ClinicBookingService.InvalidClinicFault), Action="http://tempuri.org/ISampleService/GetClinicIdInvalidClinicFaultFault", Name="InvalidClinicFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
        ClinicBookingApplication.ClinicBookingService.ClinicDataContract GetClinicId(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetClinicId", ReplyAction="http://tempuri.org/ISampleService/GetClinicIdResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.ClinicDataContract> GetClinicIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetClinics", ReplyAction="http://tempuri.org/ISampleService/GetClinicsResponse")]
        ClinicBookingApplication.ClinicBookingService.ClinicDataContract[] GetClinics();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetClinics", ReplyAction="http://tempuri.org/ISampleService/GetClinicsResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.ClinicDataContract[]> GetClinicsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetPatient", ReplyAction="http://tempuri.org/ISampleService/GetPatientResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicBookingApplication.ClinicBookingService.InvalidPatientFault), Action="http://tempuri.org/ISampleService/GetPatientInvalidPatientFaultFault", Name="InvalidPatientFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
        ClinicBookingApplication.ClinicBookingService.PatientDataContract GetPatient(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetPatient", ReplyAction="http://tempuri.org/ISampleService/GetPatientResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.PatientDataContract> GetPatientAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetPatients", ReplyAction="http://tempuri.org/ISampleService/GetPatientsResponse")]
        ClinicBookingApplication.ClinicBookingService.PatientDataContract[] GetPatients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetPatients", ReplyAction="http://tempuri.org/ISampleService/GetPatientsResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.PatientDataContract[]> GetPatientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetSpecialty", ReplyAction="http://tempuri.org/ISampleService/GetSpecialtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicBookingApplication.ClinicBookingService.InvalidSpecialtyFault), Action="http://tempuri.org/ISampleService/GetSpecialtyInvalidSpecialtyFaultFault", Name="InvalidSpecialtyFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
        ClinicBookingApplication.ClinicBookingService.SpecialtyDataContract GetSpecialty(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetSpecialty", ReplyAction="http://tempuri.org/ISampleService/GetSpecialtyResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.SpecialtyDataContract> GetSpecialtyAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetSpecialties", ReplyAction="http://tempuri.org/ISampleService/GetSpecialtiesResponse")]
        ClinicBookingApplication.ClinicBookingService.SpecialtyDataContract[] GetSpecialties();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetSpecialties", ReplyAction="http://tempuri.org/ISampleService/GetSpecialtiesResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.SpecialtyDataContract[]> GetSpecialtiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetClinicSpecialty", ReplyAction="http://tempuri.org/ISampleService/GetClinicSpecialtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicBookingApplication.ClinicBookingService.InvalidClinicSpecialtyFault), Action="http://tempuri.org/ISampleService/GetClinicSpecialtyInvalidClinicSpecialtyFaultFa" +
            "ult", Name="InvalidClinicSpecialtyFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
        ClinicBookingApplication.ClinicBookingService.ClinicSpecialtyDataContract GetClinicSpecialty(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetClinicSpecialty", ReplyAction="http://tempuri.org/ISampleService/GetClinicSpecialtyResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.ClinicSpecialtyDataContract> GetClinicSpecialtyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetClinicSpecialties", ReplyAction="http://tempuri.org/ISampleService/GetClinicSpecialtiesResponse")]
        ClinicBookingApplication.ClinicBookingService.ClinicSpecialtyDataContract[] GetClinicSpecialties();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetClinicSpecialties", ReplyAction="http://tempuri.org/ISampleService/GetClinicSpecialtiesResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.ClinicSpecialtyDataContract[]> GetClinicSpecialtiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetFilteredClinicSpecialties", ReplyAction="http://tempuri.org/ISampleService/GetFilteredClinicSpecialtiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicBookingApplication.ClinicBookingService.InvalidClinicSpecialtyFault), Action="http://tempuri.org/ISampleService/GetFilteredClinicSpecialtiesInvalidClinicSpecia" +
            "ltyFaultFault", Name="InvalidClinicSpecialtyFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
        ClinicBookingApplication.ClinicBookingService.ClinicSpecialtyDataContract[] GetFilteredClinicSpecialties(string clinicCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetFilteredClinicSpecialties", ReplyAction="http://tempuri.org/ISampleService/GetFilteredClinicSpecialtiesResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.ClinicSpecialtyDataContract[]> GetFilteredClinicSpecialtiesAsync(string clinicCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetFilteredAppointments", ReplyAction="http://tempuri.org/ISampleService/GetFilteredAppointmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClinicBookingApplication.ClinicBookingService.InvalidAppointmentIdFault), Action="http://tempuri.org/ISampleService/GetFilteredAppointmentsInvalidAppointmentIdFaul" +
            "tFault", Name="InvalidAppointmentIdFault", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts.FaultDataContracts")]
        ClinicBookingApplication.ClinicBookingService.AppointmentDataContract[] GetFilteredAppointments(string filterColumn, string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetFilteredAppointments", ReplyAction="http://tempuri.org/ISampleService/GetFilteredAppointmentsResponse")]
        System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDataContract[]> GetFilteredAppointmentsAsync(string filterColumn, string searchTerm);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISampleServiceChannel : ClinicBookingApplication.ClinicBookingService.ISampleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SampleServiceClient : System.ServiceModel.ClientBase<ClinicBookingApplication.ClinicBookingService.ISampleService>, ClinicBookingApplication.ClinicBookingService.ISampleService {
        
        public SampleServiceClient() {
        }
        
        public SampleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SampleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SampleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SampleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClinicBookingApplication.ClinicBookingService.AppointmentDataContract SetAppointment(bool isActive, string patientId, System.DateTime startDateTime, string durationId, string clinicId, string urgencyId, string appointmentTypeId) {
            return base.Channel.SetAppointment(isActive, patientId, startDateTime, durationId, clinicId, urgencyId, appointmentTypeId);
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDataContract> SetAppointmentAsync(bool isActive, string patientId, System.DateTime startDateTime, string durationId, string clinicId, string urgencyId, string appointmentTypeId) {
            return base.Channel.SetAppointmentAsync(isActive, patientId, startDateTime, durationId, clinicId, urgencyId, appointmentTypeId);
        }
        
        public ClinicBookingApplication.ClinicBookingService.AppointmentDataContract GetAppointment(int id) {
            return base.Channel.GetAppointment(id);
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDataContract> GetAppointmentAsync(int id) {
            return base.Channel.GetAppointmentAsync(id);
        }
        
        public ClinicBookingApplication.ClinicBookingService.AppointmentDataContract AlterAppointment(int id) {
            return base.Channel.AlterAppointment(id);
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDataContract> AlterAppointmentAsync(int id) {
            return base.Channel.AlterAppointmentAsync(id);
        }
        
        public ClinicBookingApplication.ClinicBookingService.AppointmentDataContract[] GetAppointments() {
            return base.Channel.GetAppointments();
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDataContract[]> GetAppointmentsAsync() {
            return base.Channel.GetAppointmentsAsync();
        }
        
        public ClinicBookingApplication.ClinicBookingService.AppointmentDurationDataContract GetAppointmentDurationData(string id) {
            return base.Channel.GetAppointmentDurationData(id);
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDurationDataContract> GetAppointmentDurationDataAsync(string id) {
            return base.Channel.GetAppointmentDurationDataAsync(id);
        }
        
        public ClinicBookingApplication.ClinicBookingService.AppointmentDurationDataContract[] GetAllAppointmentDurationData() {
            return base.Channel.GetAllAppointmentDurationData();
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDurationDataContract[]> GetAllAppointmentDurationDataAsync() {
            return base.Channel.GetAllAppointmentDurationDataAsync();
        }
        
        public ClinicBookingApplication.ClinicBookingService.AppointmentTypeDataContract GetAppointmentTypeId(string id) {
            return base.Channel.GetAppointmentTypeId(id);
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentTypeDataContract> GetAppointmentTypeIdAsync(string id) {
            return base.Channel.GetAppointmentTypeIdAsync(id);
        }
        
        public ClinicBookingApplication.ClinicBookingService.AppointmentTypeDataContract[] GetAppointmentTypes() {
            return base.Channel.GetAppointmentTypes();
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentTypeDataContract[]> GetAppointmentTypesAsync() {
            return base.Channel.GetAppointmentTypesAsync();
        }
        
        public ClinicBookingApplication.ClinicBookingService.AppointmentUrgencyDataContract GetUrgency(string id) {
            return base.Channel.GetUrgency(id);
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentUrgencyDataContract> GetUrgencyAsync(string id) {
            return base.Channel.GetUrgencyAsync(id);
        }
        
        public ClinicBookingApplication.ClinicBookingService.AppointmentUrgencyDataContract[] GetUrgencies() {
            return base.Channel.GetUrgencies();
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentUrgencyDataContract[]> GetUrgenciesAsync() {
            return base.Channel.GetUrgenciesAsync();
        }
        
        public ClinicBookingApplication.ClinicBookingService.ClinicDataContract GetClinicId(string id) {
            return base.Channel.GetClinicId(id);
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.ClinicDataContract> GetClinicIdAsync(string id) {
            return base.Channel.GetClinicIdAsync(id);
        }
        
        public ClinicBookingApplication.ClinicBookingService.ClinicDataContract[] GetClinics() {
            return base.Channel.GetClinics();
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.ClinicDataContract[]> GetClinicsAsync() {
            return base.Channel.GetClinicsAsync();
        }
        
        public ClinicBookingApplication.ClinicBookingService.PatientDataContract GetPatient(string id) {
            return base.Channel.GetPatient(id);
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.PatientDataContract> GetPatientAsync(string id) {
            return base.Channel.GetPatientAsync(id);
        }
        
        public ClinicBookingApplication.ClinicBookingService.PatientDataContract[] GetPatients() {
            return base.Channel.GetPatients();
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.PatientDataContract[]> GetPatientsAsync() {
            return base.Channel.GetPatientsAsync();
        }
        
        public ClinicBookingApplication.ClinicBookingService.SpecialtyDataContract GetSpecialty(string id) {
            return base.Channel.GetSpecialty(id);
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.SpecialtyDataContract> GetSpecialtyAsync(string id) {
            return base.Channel.GetSpecialtyAsync(id);
        }
        
        public ClinicBookingApplication.ClinicBookingService.SpecialtyDataContract[] GetSpecialties() {
            return base.Channel.GetSpecialties();
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.SpecialtyDataContract[]> GetSpecialtiesAsync() {
            return base.Channel.GetSpecialtiesAsync();
        }
        
        public ClinicBookingApplication.ClinicBookingService.ClinicSpecialtyDataContract GetClinicSpecialty(int id) {
            return base.Channel.GetClinicSpecialty(id);
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.ClinicSpecialtyDataContract> GetClinicSpecialtyAsync(int id) {
            return base.Channel.GetClinicSpecialtyAsync(id);
        }
        
        public ClinicBookingApplication.ClinicBookingService.ClinicSpecialtyDataContract[] GetClinicSpecialties() {
            return base.Channel.GetClinicSpecialties();
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.ClinicSpecialtyDataContract[]> GetClinicSpecialtiesAsync() {
            return base.Channel.GetClinicSpecialtiesAsync();
        }
        
        public ClinicBookingApplication.ClinicBookingService.ClinicSpecialtyDataContract[] GetFilteredClinicSpecialties(string clinicCode) {
            return base.Channel.GetFilteredClinicSpecialties(clinicCode);
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.ClinicSpecialtyDataContract[]> GetFilteredClinicSpecialtiesAsync(string clinicCode) {
            return base.Channel.GetFilteredClinicSpecialtiesAsync(clinicCode);
        }
        
        public ClinicBookingApplication.ClinicBookingService.AppointmentDataContract[] GetFilteredAppointments(string filterColumn, string searchTerm) {
            return base.Channel.GetFilteredAppointments(filterColumn, searchTerm);
        }
        
        public System.Threading.Tasks.Task<ClinicBookingApplication.ClinicBookingService.AppointmentDataContract[]> GetFilteredAppointmentsAsync(string filterColumn, string searchTerm) {
            return base.Channel.GetFilteredAppointmentsAsync(filterColumn, searchTerm);
        }
    }
}
