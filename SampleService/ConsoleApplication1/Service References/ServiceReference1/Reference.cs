//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentDurationDataContract", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts")]
    [System.SerializableAttribute()]
    public partial class AppointmentDurationDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppointmentLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppointmentLength {
            get {
                return this.AppointmentLengthField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentLengthField, value) != true)) {
                    this.AppointmentLengthField = value;
                    this.RaisePropertyChanged("AppointmentLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationId {
            get {
                return this.DurationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationIdField, value) != true)) {
                    this.DurationIdField = value;
                    this.RaisePropertyChanged("DurationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentTypeDataContract", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts")]
    [System.SerializableAttribute()]
    public partial class AppointmentTypeDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppointmentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppointmentTypeId {
            get {
                return this.AppointmentTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentTypeIdField, value) != true)) {
                    this.AppointmentTypeIdField = value;
                    this.RaisePropertyChanged("AppointmentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescriptor {
            get {
                return this.TypeDescriptorField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptorField, value) != true)) {
                    this.TypeDescriptorField = value;
                    this.RaisePropertyChanged("TypeDescriptor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentUrgencyDataContract", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts")]
    [System.SerializableAttribute()]
    public partial class AppointmentUrgencyDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrgencyDescriptorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrgencyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrgencyDescriptor {
            get {
                return this.UrgencyDescriptorField;
            }
            set {
                if ((object.ReferenceEquals(this.UrgencyDescriptorField, value) != true)) {
                    this.UrgencyDescriptorField = value;
                    this.RaisePropertyChanged("UrgencyDescriptor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrgencyId {
            get {
                return this.UrgencyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UrgencyIdField, value) != true)) {
                    this.UrgencyIdField = value;
                    this.RaisePropertyChanged("UrgencyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClinicDataContract", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts")]
    [System.SerializableAttribute()]
    public partial class ClinicDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClinicIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClinicId {
            get {
                return this.ClinicIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicIdField, value) != true)) {
                    this.ClinicIdField = value;
                    this.RaisePropertyChanged("ClinicId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientDataContract", Namespace="http://schemas.datacontract.org/2004/07/SampleDataContracts")]
    [System.SerializableAttribute()]
    public partial class PatientDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdField, value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISampleService")]
    public interface ISampleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointmentDurationData", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentDurationDataResponse")]
        ConsoleApplication1.ServiceReference1.AppointmentDurationDataContract GetAppointmentDurationData(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointmentDurationData", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentDurationDataResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.AppointmentDurationDataContract> GetAppointmentDurationDataAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAllAppointmentDurationData", ReplyAction="http://tempuri.org/ISampleService/GetAllAppointmentDurationDataResponse")]
        ConsoleApplication1.ServiceReference1.AppointmentDurationDataContract[] GetAllAppointmentDurationData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAllAppointmentDurationData", ReplyAction="http://tempuri.org/ISampleService/GetAllAppointmentDurationDataResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.AppointmentDurationDataContract[]> GetAllAppointmentDurationDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointmentTypeId", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentTypeIdResponse")]
        ConsoleApplication1.ServiceReference1.AppointmentTypeDataContract GetAppointmentTypeId(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointmentTypeId", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentTypeIdResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.AppointmentTypeDataContract> GetAppointmentTypeIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointmentTypes", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentTypesResponse")]
        ConsoleApplication1.ServiceReference1.AppointmentTypeDataContract[] GetAppointmentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetAppointmentTypes", ReplyAction="http://tempuri.org/ISampleService/GetAppointmentTypesResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.AppointmentTypeDataContract[]> GetAppointmentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetUrgency", ReplyAction="http://tempuri.org/ISampleService/GetUrgencyResponse")]
        ConsoleApplication1.ServiceReference1.AppointmentUrgencyDataContract GetUrgency(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetUrgency", ReplyAction="http://tempuri.org/ISampleService/GetUrgencyResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.AppointmentUrgencyDataContract> GetUrgencyAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetUrgencies", ReplyAction="http://tempuri.org/ISampleService/GetUrgenciesResponse")]
        ConsoleApplication1.ServiceReference1.AppointmentUrgencyDataContract[] GetUrgencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetUrgencies", ReplyAction="http://tempuri.org/ISampleService/GetUrgenciesResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.AppointmentUrgencyDataContract[]> GetUrgenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetClinicId", ReplyAction="http://tempuri.org/ISampleService/GetClinicIdResponse")]
        ConsoleApplication1.ServiceReference1.ClinicDataContract GetClinicId(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetClinicId", ReplyAction="http://tempuri.org/ISampleService/GetClinicIdResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.ClinicDataContract> GetClinicIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetClinics", ReplyAction="http://tempuri.org/ISampleService/GetClinicsResponse")]
        ConsoleApplication1.ServiceReference1.ClinicDataContract[] GetClinics();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetClinics", ReplyAction="http://tempuri.org/ISampleService/GetClinicsResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.ClinicDataContract[]> GetClinicsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetPatient", ReplyAction="http://tempuri.org/ISampleService/GetPatientResponse")]
        ConsoleApplication1.ServiceReference1.PatientDataContract GetPatient(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetPatient", ReplyAction="http://tempuri.org/ISampleService/GetPatientResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.PatientDataContract> GetPatientAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetPatients", ReplyAction="http://tempuri.org/ISampleService/GetPatientsResponse")]
        ConsoleApplication1.ServiceReference1.PatientDataContract[] GetPatients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/GetPatients", ReplyAction="http://tempuri.org/ISampleService/GetPatientsResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.PatientDataContract[]> GetPatientsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISampleServiceChannel : ConsoleApplication1.ServiceReference1.ISampleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SampleServiceClient : System.ServiceModel.ClientBase<ConsoleApplication1.ServiceReference1.ISampleService>, ConsoleApplication1.ServiceReference1.ISampleService {
        
        public SampleServiceClient() {
        }
        
        public SampleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SampleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SampleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SampleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleApplication1.ServiceReference1.AppointmentDurationDataContract GetAppointmentDurationData(string id) {
            return base.Channel.GetAppointmentDurationData(id);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.AppointmentDurationDataContract> GetAppointmentDurationDataAsync(string id) {
            return base.Channel.GetAppointmentDurationDataAsync(id);
        }
        
        public ConsoleApplication1.ServiceReference1.AppointmentDurationDataContract[] GetAllAppointmentDurationData() {
            return base.Channel.GetAllAppointmentDurationData();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.AppointmentDurationDataContract[]> GetAllAppointmentDurationDataAsync() {
            return base.Channel.GetAllAppointmentDurationDataAsync();
        }
        
        public ConsoleApplication1.ServiceReference1.AppointmentTypeDataContract GetAppointmentTypeId(string id) {
            return base.Channel.GetAppointmentTypeId(id);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.AppointmentTypeDataContract> GetAppointmentTypeIdAsync(string id) {
            return base.Channel.GetAppointmentTypeIdAsync(id);
        }
        
        public ConsoleApplication1.ServiceReference1.AppointmentTypeDataContract[] GetAppointmentTypes() {
            return base.Channel.GetAppointmentTypes();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.AppointmentTypeDataContract[]> GetAppointmentTypesAsync() {
            return base.Channel.GetAppointmentTypesAsync();
        }
        
        public ConsoleApplication1.ServiceReference1.AppointmentUrgencyDataContract GetUrgency(string id) {
            return base.Channel.GetUrgency(id);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.AppointmentUrgencyDataContract> GetUrgencyAsync(string id) {
            return base.Channel.GetUrgencyAsync(id);
        }
        
        public ConsoleApplication1.ServiceReference1.AppointmentUrgencyDataContract[] GetUrgencies() {
            return base.Channel.GetUrgencies();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.AppointmentUrgencyDataContract[]> GetUrgenciesAsync() {
            return base.Channel.GetUrgenciesAsync();
        }
        
        public ConsoleApplication1.ServiceReference1.ClinicDataContract GetClinicId(string id) {
            return base.Channel.GetClinicId(id);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.ClinicDataContract> GetClinicIdAsync(string id) {
            return base.Channel.GetClinicIdAsync(id);
        }
        
        public ConsoleApplication1.ServiceReference1.ClinicDataContract[] GetClinics() {
            return base.Channel.GetClinics();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.ClinicDataContract[]> GetClinicsAsync() {
            return base.Channel.GetClinicsAsync();
        }
        
        public ConsoleApplication1.ServiceReference1.PatientDataContract GetPatient(string id) {
            return base.Channel.GetPatient(id);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.PatientDataContract> GetPatientAsync(string id) {
            return base.Channel.GetPatientAsync(id);
        }
        
        public ConsoleApplication1.ServiceReference1.PatientDataContract[] GetPatients() {
            return base.Channel.GetPatients();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.PatientDataContract[]> GetPatientsAsync() {
            return base.Channel.GetPatientsAsync();
        }
    }
}
